{
  "components": {
    "requestBodies": {
      "AddonsCreateUserAddonV2Body": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AddonsCreateUserAddonV2Body"
            }
          }
        },
        "required": true
      },
      "ChatAPIChatBotSendMessageBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ChatAPIChatBotSendMessageBody"
            }
          }
        },
        "required": true
      },
      "SemanticCreateUserSemanticBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SemanticCreateUserSemanticBody"
            }
          }
        },
        "required": true
      }
    },
    "schemas": {
      "AddonSecondaryLinkagePosition": {
        "enum": [
          "POST_SPEC_HEAD",
          "POST_SPEC_TAIL",
          "POST_PRICE_SPEC",
          "POST_DESC_TAIL"
        ],
        "type": "string"
      },
      "AddonSemanticCarVerificationStage": {
        "enum": [
          "CARVERIFICATIONSTAGE_NOT_STARTED",
          "CARVERIFICATIONSTAGE_SHAHKAR",
          "CAR_CARD_VERIFICATION",
          "CAR_MODEL_VERIFICATION"
        ],
        "type": "string"
      },
      "AddonSemanticIdentityVerificationResult": {
        "enum": [
          "FACE_AND_ID_MATCHED"
        ],
        "title": "- FACE_AND_ID_MATCHED: ID means melli CARD, this value results in badge in matching",
        "type": "string"
      },
      "AddonSemanticIdentityVerificationStage": {
        "enum": [
          "IDENTITYVERIFICATIONSTAGE_NOT_STARTED",
          "NATIONAL_INFO_VERIFICATION",
          "IMAGE_VERIFICATION",
          "VIDEO_VERIFICATION"
        ],
        "type": "string"
      },
      "AddonSemanticInspectionResult": {
        "enum": [
          "INSPECTION_APPROVED"
        ],
        "type": "string"
      },
      "AddonSemanticNewFaceVerificationResult": {
        "enum": [
          "NEW_FACE_VERIFICATION_FAILED"
        ],
        "type": "string"
      },
      "AddonSemanticOwnershipResult": {
        "enum": [
          "OWNERSHIP_CONFIRMED",
          "OWNERSHIP_DELEGATION_CONFIRMED"
        ],
        "type": "string"
      },
      "AddonSemanticPostVerificationResult": {
        "enum": [
          "POST_INFORMATION_MATCHED"
        ],
        "type": "string"
      },
      "AddonsCreatePostAddonV2Body": {
        "properties": {
          "notes": {
            "type": "string"
          },
          "semantic": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "widgets": {
            "items": {
              "$ref": "#/components/schemas/addonsWidget"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AddonsCreateUserAddonV2Body": {
        "properties": {
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "cost": {
            "format": "int32",
            "type": "integer"
          },
          "phone": {
            "type": "string"
          },
          "semantic": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "ticket_uuid": {
            "type": "string"
          },
          "widgets": {
            "items": {
              "$ref": "#/components/schemas/addonsWidget"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ChatAPIChatBotSendMessageBody": {
        "properties": {
          "buttons": {
            "$ref": "#/components/schemas/chatapiChatButtonGrid"
          },
          "media_token": {
            "description": "Token for attached media (if any)",
            "example": "media_token_12345",
            "type": "string"
          },
          "text_message": {
            "description": "Text message content to be sent by the bot",
            "example": "Thank you for your inquiry. How can I help you?",
            "type": "string"
          },
          "user_id": {
            "description": "Unique identifier for the user to start or continue a conversation with",
            "example": "user_789012",
            "type": "string"
          }
        },
        "required": [
          "text_message"
        ],
        "type": "object"
      },
      "ChatAPIConversationSendMessageBody": {
        "properties": {
          "media_token": {
            "description": "Token for attached media (if any)",
            "example": "media_token_12345",
            "type": "string"
          },
          "message": {
            "description": "Text message content to be sent",
            "example": "Hello, I'm interested in your product",
            "type": "string"
          },
          "receiver_buttons": {
            "$ref": "#/components/schemas/chatapiChatButtonGrid"
          },
          "sender_buttons": {
            "$ref": "#/components/schemas/chatapiChatButtonGrid"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "DivarIconsIconName": {
        "enum": [
          "KEYBOARD_ARROW_RIGHT",
          "KEYBOARD_ARROW_LEFT",
          "ARROW_FORWARD",
          "REFRESH",
          "REMOVE",
          "SEND",
          "DELETE",
          "PHOTO_LIBRARY",
          "ADD",
          "CLOSE",
          "CHECKED",
          "CHECK_BOX",
          "CHECK_BOX_OUTLINE_BLANK",
          "CHAT_DOUBLE",
          "CONTENT_COPY",
          "REPORT",
          "CAT_VEHICLES",
          "PERSON",
          "CALL",
          "CAT_ELECTRONIC_DEVICES",
          "PLACE",
          "HISTORY",
          "CHECK_CIRCLE",
          "ACCESS_TIME",
          "INFO_OUTLINE",
          "PAYMENT",
          "SHOW_CHART",
          "CONTACT_PHONE",
          "TRENDING_UP",
          "CAR_BODY",
          "INSPECT",
          "CAR_TIRES",
          "CAR_ELECTRONICS",
          "CAR_ENGINE",
          "CAR_HYDRAULICS",
          "CAR_OPTIONS",
          "CAR_DOCUMENTS",
          "CANCEL",
          "WARNING",
          "HELP",
          "MONEY",
          "KARNAMEH",
          "EDIT",
          "SUPPORT",
          "CAR_INSPECTED",
          "TERMS",
          "LADDER_COLLECTION",
          "HOUSE_INSPECTION",
          "ADD_CIRCLE",
          "GAVEL",
          "LADDER_GROUP",
          "VISIBILITY",
          "TIMER",
          "LOCK",
          "BLOCK",
          "EMAIL_OUTLINE",
          "ASSIGNMENT_IND",
          "TOC",
          "EXIT_TO_APP",
          "HELP_OUTLINE",
          "TELEPHONE",
          "EVENT_NOTE",
          "COMMUNITY",
          "REAL_ESTATE",
          "VR",
          "NUM_1",
          "NUM_2",
          "NUM_3",
          "NUM_4",
          "NUM_5",
          "NUM_6",
          "NUM_7",
          "NUM_8",
          "NUM_9",
          "ELEVATOR",
          "PARKING",
          "CABINET",
          "BALCONY",
          "TEXTURE",
          "WC",
          "SNOWFLAKE",
          "SUNNY",
          "THERMOMETER",
          "VERIFIED",
          "SETTINGS",
          "CREDIT_ACCOUNT",
          "CAR_AUCTION",
          "CONCIERGE_SALE",
          "INFO",
          "MARKETPLACE_GENERAL",
          "MARKETPLACE_HOME",
          "MARKETPLACE_PERSONAL",
          "MARKETPLACE_ELECTRONIC_DEVICES",
          "INDICATOR_F",
          "SHARE",
          "CAR_INSPECTION",
          "VERIFIED_USER",
          "MARKETPLACE_LIST",
          "BINDER",
          "STAR",
          "CAR_AMENITY",
          "CAR_SAFETY",
          "CAR_EQUIPMENT",
          "BUSINESS_REAL_ESTATE_AGENCY",
          "BUSINESS_MARKETPLACE",
          "BUSINESS_AUTO_DEALERSHIP",
          "LOCAL_SHIPPING",
          "MOPED",
          "TEXT_SMS_OUTLINE",
          "PLACE_F",
          "MOBILE_FRIENDLY",
          "STAR_BORDER",
          "IMAGE_OUTLINE",
          "ARTICLE_OUTLINE",
          "POST_FEEDBACK",
          "DOWNLOAD",
          "FILTER",
          "SUPPORT_AGENT",
          "MORE_VERT",
          "BOOKMARK",
          "BOOKMARK_BORDER",
          "GIFT",
          "ANALYTICS",
          "STORE",
          "STORE_OUTLINE",
          "CAT_BUSINESSES",
          "CAT_FOR_THE_HOME",
          "CAT_SERVICES",
          "CAT_PERSONAL",
          "CAT_LEISURE_HOBBIES",
          "CAT_JOBS",
          "SCHOOL",
          "NOTE",
          "LOGOUT",
          "PERSON_ADD",
          "ADVERT",
          "ADVERT_OUTLINE",
          "ACCESS_TIME_OUTLINE",
          "NOTE_OUTLINE",
          "PAYMENT_OUTLINE",
          "INSTAGRAM",
          "TAG_CHECK_CIRCLE",
          "FULLSCREEN",
          "ADD_CIRCLE_OUTLINE",
          "NOTE_ADD_OUTLINE",
          "BRAND_ALFA_ROMEO",
          "BRAND_AMICO",
          "BRAND_ARIO",
          "BRAND_ARISAN",
          "BRAND_AUDI",
          "BRAND_BAIC",
          "BRAND_BESTURN",
          "BRAND_BISU",
          "BRAND_BMW",
          "BRAND_BORGWARD",
          "BRAND_BRILLIANCE",
          "BRAND_BUICK",
          "BRAND_BYD",
          "BRAND_CAPRA",
          "BRAND_CHANGAN",
          "BRAND_CHERY",
          "BRAND_CHEVROLET",
          "BRAND_CITROEN",
          "BRAND_DAEWOO",
          "BRAND_DATSUN",
          "BRAND_DEER",
          "BRAND_DELICA",
          "BRAND_DENA",
          "BRAND_DIGNITY",
          "BRAND_DODGE",
          "BRAND_DOMY",
          "BRAND_DONGFENG",
          "BRAND_DS",
          "BRAND_FARDA",
          "BRAND_FAW",
          "BRAND_FIAT",
          "BRAND_FIDELITY",
          "BRAND_FORD",
          "BRAND_FOTON",
          "BRAND_GAC_GONOW",
          "BRAND_GEELY",
          "BRAND_GREATWALL",
          "BRAND_HAFEI_LOBO",
          "BRAND_HAIMA",
          "BRAND_HANTENG",
          "BRAND_HAVAL",
          "BRAND_HILLMAN",
          "BRAND_HONDA",
          "BRAND_HUMMER",
          "BRAND_HYOSOW",
          "BRAND_HYUNDAI",
          "BRAND_IRANKHODRO_VAN",
          "BRAND_ISUZU",
          "BRAND_IVECO",
          "BRAND_JAC",
          "BRAND_JAGUAR",
          "BRAND_JEEP",
          "BRAND_JMC",
          "BRAND_JOYLONG",
          "BRAND_KIA",
          "BRAND_KMC",
          "BRAND_LADA",
          "BRAND_LAMBORGHINI",
          "BRAND_LAND_ROVER",
          "BRAND_LANDMARK",
          "BRAND_LEXUS",
          "BRAND_LIFAN",
          "BRAND_LOTUS",
          "BRAND_LUXGEN",
          "BRAND_MASERATI",
          "BRAND_MAXUS",
          "BRAND_MAZDA",
          "BRAND_MERCEDESBENZ",
          "BRAND_MG",
          "BRAND_MINI",
          "BRAND_MITSUBISHI",
          "BRAND_MVM",
          "BRAND_NARVAN",
          "BRAND_NISSAN",
          "BRAND_OLDSMOBILE",
          "BRAND_OPEL",
          "BRAND_PAYKAN",
          "BRAND_PAZHAN",
          "BRAND_PEUGEOT",
          "BRAND_PONTIAC",
          "BRAND_PORSCHE",
          "BRAND_PRIDE",
          "BRAND_PROTON",
          "BRAND_QUICK",
          "BRAND_RAYEN",
          "BRAND_RENAULT",
          "BRAND_RICH",
          "BRAND_RIGAN",
          "BRAND_RUNNA",
          "BRAND_SAINA",
          "BRAND_SAIPA",
          "BRAND_SAMAND",
          "BRAND_SEAT",
          "BRAND_SHAHIN",
          "BRAND_SINAD",
          "BRAND_SMART",
          "BRAND_SSANGYONG",
          "BRAND_SUBARU",
          "BRAND_SUZUKI",
          "BRAND_SWM",
          "BRAND_TARA",
          "BRAND_TIBA",
          "BRAND_TOYOTA",
          "BRAND_UAZ",
          "BRAND_VOLKSWAGEN",
          "BRAND_VOLVO",
          "BRAND_ZAMYAD",
          "BRAND_ZOTYE",
          "BRAND_SOUEAST",
          "ARCHWAY",
          "METRO",
          "POI",
          "STREET_SIGN",
          "TREES",
          "EARNEST",
          "RESTAURANT",
          "BACKPACK",
          "STETHOSCOPE",
          "MOSQUE",
          "HOSPITAL",
          "CAPSULE",
          "BANK",
          "CART",
          "SHOPPING",
          "BRAND_CHRYSLER",
          "BRAND_DAIHATSU",
          "BRAND_FOWNIX",
          "BRAND_ROLLSROYCE",
          "TUNE",
          "EXCHANGE",
          "BABY",
          "BAGUETTE",
          "BUS",
          "COFFEE",
          "FRUIT",
          "GAS_STATION",
          "GYM",
          "HAMBURGER",
          "HIGHWAY",
          "MEDIC",
          "SCHOOL_OUTLINE",
          "TAXI",
          "CAMERA",
          "CAMERA_O",
          "EYE_OFF",
          "BRAND_DAYUN",
          "BRAND_MAXMOTOR",
          "VIDEOCAM",
          "BRAND_ACER",
          "BRAND_ALCATEL",
          "BRAND_AMAZON",
          "BRAND_APPLE",
          "BRAND_ARCHOS",
          "BRAND_ASUS",
          "BRAND_BLACKBERRY",
          "BRAND_BLU",
          "BRAND_CATERPILLAR",
          "BRAND_ENERGIZER",
          "BRAND_GIGABYTE",
          "BRAND_GIONEE",
          "BRAND_GLX",
          "BRAND_GOOGLE",
          "BRAND_GPLUS",
          "BRAND_HONOR",
          "BRAND_HTC",
          "BRAND_HUAWEI",
          "BRAND_LENOVO",
          "BRAND_LG",
          "BRAND_MEIZU",
          "BRAND_MICROMAX",
          "BRAND_MICROSOFT",
          "BRAND_MOTOROLA",
          "BRAND_NOKIA",
          "BRAND_ONEPLUS",
          "BRAND_OPPO",
          "BRAND_PANASONIC",
          "BRAND_PHILIPS",
          "BRAND_PIXEL",
          "BRAND_PRESTIGIO",
          "BRAND_RAZER",
          "BRAND_REALME",
          "BRAND_SAMSUNG",
          "BRAND_SHARP",
          "BRAND_SONY_ERICSSON",
          "BRAND_SONY",
          "BRAND_VERTU",
          "BRAND_VIVO",
          "BRAND_XIAOMI",
          "BRAND_YOTA",
          "BRAND_ZTE",
          "BRAND_INROADS",
          "VIDEOCAM_O",
          "SHIELD_PHONE",
          "SHIELD_PHONE_O",
          "BRAND_LAMARI",
          "VERIFIED_GREEN",
          "CHART",
          "CHART_O",
          "LAUNCH",
          "WALLET",
          "TRASH_O",
          "TRASH_F",
          "BRAND_RESPECT",
          "BRAND_TIGARD",
          "FILE",
          "FILE_O",
          "IMAGE_OUTLINE_O",
          "CONTACT_PHONE_O",
          "PUZZLE",
          "PUZZLE_OUTLINE",
          "CALL_OUTGOING",
          "CALL_INCOMING",
          "CALL_MISSED",
          "CALL_BLOCKED",
          "ARCHIVE",
          "ARCHIVE_O",
          "CHAT_BUBBLE",
          "CHAT_BUBBLE_F",
          "MOBILE_1",
          "MOBILE_2",
          "MOBILE_3",
          "MOBILE_4",
          "MOBILE_5",
          "MOBILE_6",
          "MOBILE_7",
          "CARPET_1",
          "CARPET_2",
          "CARPET_3",
          "CARPET_4",
          "CARPET_5",
          "CARPET_6",
          "SOFA_1",
          "SOFA_2",
          "SOFA_3",
          "SOFA_4",
          "SOFA_5",
          "SOFA_6",
          "LIGHTS_2",
          "LIGHTS_1",
          "LIGHTS_3",
          "LIGHTS_4",
          "LIGHTS_5",
          "BATTERY_CHARGING",
          "BATTERY_HORIZ_075",
          "BATTERY_PROFILE",
          "BUILD_CIRCLE",
          "HEADPHONES",
          "INVENTORY",
          "SMARTPHONE",
          "HOME_INSPECTION",
          "MOBILE_INSPECTION",
          "CAR_COLOR_BLUE",
          "CAR_COLOR_CHERRY",
          "CAR_COLOR_PERSIANBLUE",
          "CAR_COLOR_EGGPLANT",
          "CAR_COLOR_BRONZE",
          "CAR_COLOR_BEIGE",
          "CAR_COLOR_PURPLE",
          "CAR_COLOR_ONIONSKIN",
          "CAR_COLOR_TITANIUM",
          "CAR_COLOR_GRAY",
          "CAR_COLOR_KHAKI",
          "CAR_COLOR_SLATEGRAY",
          "CAR_COLOR_CHARCOAL",
          "CAR_COLOR_YELLOW",
          "CAR_COLOR_CRIMSON",
          "CAR_COLOR_OLIVE",
          "CAR_COLOR_GREEN",
          "CAR_COLOR_LIGHTSLATEGRAY",
          "CAR_COLOR_NAVYBLUE",
          "CAR_COLOR_WHITE",
          "CAR_COLOR_OYSTERWHITE",
          "CAR_COLOR_GOLDEN",
          "CAR_COLOR_LIGHTGRAY",
          "CAR_COLOR_WARMGRAY",
          "CAR_COLOR_JUJUBE",
          "CAR_COLOR_RED",
          "CAR_COLOR_BROWN",
          "CAR_COLOR_CARBONBLACK",
          "CAR_COLOR_DARKRED",
          "CAR_COLOR_COPPER",
          "CAR_COLOR_BLACK",
          "CAR_COLOR_MOCHA",
          "CAR_COLOR_ORANGE",
          "CAR_COLOR_BLUESILVER",
          "CAR_COLOR_SILVER",
          "CAR_COLOR_DIMGRAY",
          "CAR_COLOR_JADEGREEN",
          "DIVAR_LOGO",
          "CAR_COLOR_CREAM",
          "CAR_FRONT_SIDE",
          "CAR_BACK_SIDE",
          "CAR_DRIVER_SIDE",
          "CAR_PASSENGER_SIDE",
          "CAR_ODOMETER",
          "CRAFTSMEN",
          "KITCHEN_UTENSILS",
          "STOVES_HEATERS_FIREPLACES",
          "TRAVEL_PACKAGES",
          "WATER_HEATER_PACKAGE_RADIATOR",
          "STAIRS",
          "ACCESSIBILITY",
          "MAP_VIEW",
          "THUMB_DOWN",
          "THUMB_UP",
          "VIDEOCAM_PLUS",
          "BADGE",
          "BADGE_F",
          "RADIO_BUTTON_UNCHECKED",
          "POLICE",
          "SORT_ASCENDING",
          "BUSINESS_PERSONAL",
          "BRAND_XTRIM",
          "BRAND_BESTUNE",
          "BRAND_GAC",
          "BRAND_VENUCIA",
          "BRAND_VGV",
          "BRAND_ZX_AUTO",
          "BRAND_QINGLING",
          "BUSINESS_JOBS",
          "SHIELD_CHECK_CIRCLE",
          "SCRIPT_TEXT",
          "DOT_INDICATOR",
          "CLOCK",
          "MAP_MARKER",
          "TOMAN_SIGN",
          "CHECK_DECOGRAM",
          "LADDER",
          "RUNNING_MAN",
          "CALENDAR_TEXT",
          "HOME",
          "ADMINISTRATIVE_DOC",
          "ANALOG_WATCH",
          "ANKLE_BOOTS",
          "BARTER",
          "BOOTS",
          "BRIEFCASE",
          "CAPACITY",
          "CARPET_DIMENSIONS",
          "CHAIRS",
          "CHANDELIER",
          "COLOR_BEAKER",
          "CONDITION",
          "CONTROLLER",
          "COSMETICS",
          "CPU",
          "DIGITAL_WATCH",
          "DOOR",
          "DRESS_SHOES",
          "ELECTRICAL",
          "FAKE_BADGE",
          "FANNY_PACK",
          "FURNITURE",
          "FURNITURE_CLASSIC",
          "FURNITURE_SOFA",
          "HANDBAG",
          "HDMI",
          "HERBAL_PILLS",
          "HOME_AREA",
          "INSTALLMENT_SALE",
          "IRANCELL",
          "IRAN_MAP",
          "JEWELRY_ANKLET",
          "JEWELRY_BRACELET",
          "JEWELRY_EARRINGS",
          "JEWELRY_NECKLACE",
          "JEWELRY_RING",
          "JEWELRY_SET",
          "LAN",
          "LOAFERS",
          "MAN",
          "MAN_AND_WOMAN",
          "MATERIAL",
          "MCI",
          "MEDICAL",
          "MEMORY",
          "MODEM",
          "MONEY_BILLS",
          "NINTENDO",
          "ORIGINAL_BADGE",
          "PAPER_DEED",
          "PARKING_LOT",
          "PERFUMES",
          "PLAY_STATION",
          "RAM",
          "RECEIVING_HAND",
          "RIGHTEL",
          "SANDALS",
          "SCISSORS",
          "SCREEN_SIZE",
          "SHAKING_HANDS",
          "SHOULDER_BAG",
          "SIDE_TABLE",
          "SIM",
          "SIM_HOLDER",
          "SKIN_CARE",
          "SLIPPERS",
          "SMART_WATCH",
          "SNEAKERS",
          "SPEEDOMETER",
          "SPORT_BAG",
          "STAIRCASE",
          "STORAGE",
          "UMBRELLA",
          "USB",
          "WOMAN",
          "WORLD_MAP",
          "XBOX",
          "SHIELD_CHECK",
          "CAR",
          "BUILDING",
          "STOP_WATCH",
          "CHATBOT",
          "CHATBOT_OUTLINE",
          "APARTMENT_RENT",
          "APARTMENT_SELL",
          "COMMERCIAL_RENT",
          "COMMERCIAL_SELL",
          "HOUSE_VILLA_RENT",
          "HOUSE_VILLA_SELL",
          "INDUSTRY_AGRICULTURE_BUSINESS_RENT",
          "INDUSTRY_AGRICULTURE_BUSINESS_SELL",
          "OFFICE_RENT",
          "OFFICE_SELL",
          "PARTNERSHIP",
          "PLOT_OLD",
          "PRESELL",
          "REAL_ESTATE_SERVICES",
          "RESIDENTIAL_RENT",
          "RESIDENTIAL_SELL",
          "SHOP_RENT",
          "SHOP_SELL",
          "SUITE_APARTMENT",
          "TEMPORARY_RENT",
          "VILLA",
          "WORKSPACE",
          "IMAGE_MULTIPLE",
          "SHATEL_MOBILE",
          "MEGAPHONE_F",
          "MEGAPHONE",
          "YEKTANET",
          "TAPSELL",
          "DAART",
          "CLOSE_CIRCLE",
          "CLOSE_CIRCLE_F",
          "ACCESSORIES",
          "ACCOUNTING_AND_FINANCE",
          "ACCOUNTING_FINANCE_LEGAL",
          "ADMINISTRATION_AND_HR",
          "AIR_CONDITIONING_FAN_COIL",
          "ANIMALS",
          "APPLIANCE",
          "ARTIFICIAL_FLOWER",
          "AUDIO_VIDEO",
          "BABY_AND_TOYS",
          "BALL_SPORTS",
          "BARBERSHOP_AND_BEAUTYSALON",
          "BATCH",
          "BATHROOMS",
          "BATHROOM_ACCESSORIES",
          "BEAUTY_AND_HAIRCARE",
          "BED_PILLOW_BLANKET",
          "BED_SERVICE",
          "BED_SHEET",
          "BICYCLE",
          "BIRDS",
          "BOAT",
          "BOOKCASE_SHELF",
          "BOOK_STUDENT_LITERATURE",
          "BUFFET_SHOWCASES",
          "BUILDING_EQUIPMENT",
          "BUS_METRO_TRAIN",
          "CAFE_AND_RESTAURANT",
          "CAMERA_CAMCODERS",
          "CAMPING_OUTDOOR",
          "CARE_HEALTH_BEAUTY",
          "CARPET",
          "CARPET_MOQUETTE",
          "CARS",
          "CAR_AND_MOTOR",
          "CAT",
          "CATERING",
          "CCTV",
          "CHAIR_BENCH",
          "CHANDELIERS",
          "CHILDRENS_CLOTHING_AND_SHOE",
          "CHILDRENS_FURNITURE",
          "CHILD_CAR_SEAT",
          "CLASSIC",
          "CLEANING",
          "CLEANING_SUPPLIES",
          "CLOTHES_RACK",
          "CLOTHING",
          "CLOTHING_AND_SHOES",
          "COIN_STAMP",
          "COMPUTERS",
          "COMPUTER_AND_IT",
          "COMPUTER_AND_MOBILE",
          "CONCERT",
          "CONFERENCE_MEETING",
          "CONSTRUCTION_CRAFT",
          "CONTAINERS",
          "CONTAINER_ORGANIZERS",
          "COOKING_UTENSILS",
          "CRAFTS",
          "CURTAINS_TABLE_COVER",
          "DECORATION",
          "DESK",
          "DESKTOPS",
          "DETERGENT_TISSUE",
          "DINING_TABLE",
          "DISHWASHER",
          "DIVING_WATERSPORTS",
          "DOG",
          "DRINK_MAKER",
          "DRUMS_PERCUSSION",
          "EDUCATION",
          "EDUCATIONAL",
          "EVENT",
          "EVENTS_SPORTS",
          "FAN_VENTILATOR_HUMIDIFIER",
          "FARM_ANIMALS",
          "FIGURINES",
          "FISH",
          "FISHING",
          "FOOD_AND_DRINK",
          "FOOD_MILL",
          "FOR_SALE",
          "FURNITURE_WOOD",
          "GAME_CONSOLES_AND_VIDEO_GAMES",
          "GARDEN_AND_LANDSCAPING",
          "GIFT_CERTIFICATE",
          "GUITAR_BASS_AMPLIFIER",
          "HEALTH_BEAUTY",
          "HEAVY",
          "HISTORICAL",
          "HISTORICAL_OBJECTS",
          "HOBBY_COLLECTIBLES",
          "HOME_CATERING",
          "HOME_LIGHTING",
          "HORSES_EQUESTRIAN",
          "INDUSTRIAL_MACHINERY",
          "INDUSTRIAL_TECHNOLOGY",
          "JANITORIAL_CLEANING",
          "JEWELRY",
          "JEWELRY_AND_WATCHES",
          "JUICERS",
          "LAMPS",
          "LAMPSHADE",
          "LAPTOPS",
          "LEISURE_HOBBIES_TOYS",
          "LIGHT",
          "LITERARY",
          "LOST_AND_FOUND",
          "LOST_ANIMALS",
          "LOST_THINGS",
          "LUMBAR_PILLOW",
          "MAGAZINES",
          "MAT",
          "MATTRESS",
          "MEDIA_ADVERTISING",
          "MEDICAL_EQUIPMENT",
          "MIRROR",
          "MOBILE_PHONES",
          "MOBILE_TABLET",
          "MOBILE_TABLET_ACCESSORIES",
          "MODEM_AND_NETWORK_EQUIPMENT",
          "MOQUETTE",
          "MOTORCYCLES",
          "MOVIES_AND_MUSIC",
          "MP3_PLAYER",
          "MUSICAL_INSTRUMENTS",
          "NATURAL_PLANTS",
          "OFFICES",
          "OFFICE_DECORATION",
          "OTHER_APPLIANCES",
          "OVEN_BAKING_APPLIANCES",
          "PAINTINGS_PICTURE",
          "PARTS_ACCESSORIES",
          "PARTS_AND_ACCESSORIES",
          "PERSONAL_TOYS",
          "PHONE_DESK",
          "PIANO_KEYBOARD",
          "PICTORIAL_CARPET",
          "POT_KETTLE",
          "PRINTER_SCANER_COPIER",
          "RANGE_HOOD",
          "REFRIGERATOR_FREEZER",
          "RELIGIOUS",
          "RENTAL",
          "REPTILE",
          "RESEARCH",
          "RHINESTONES",
          "RODENTS_RABBITS",
          "RUBBER_CARPET",
          "RUGS_WOOLEN_CLOTH",
          "SALES_MARKETING",
          "SEWING_ACCESSORIES",
          "SEWING_KNITTING",
          "SEWING_MACHINE",
          "SHOES_BELT_BAG",
          "SHOE_RACK_DRAWER",
          "SHOP_AND_CASH",
          "SHOP_RESTAURANT",
          "SIM_CARD",
          "SLEEP_GOODS",
          "SPORT",
          "SPORT_LEISURE",
          "STATIONERY",
          "STEAM_IRON",
          "STEREO_SURROUND",
          "STROLLERS_AND_ACCESSORIES",
          "TABLECLOTHS",
          "TABLET",
          "TEACHING",
          "THEATRE_AND_CINEMA",
          "TICKET",
          "TICKETS_SPORTS",
          "TOOLBOX",
          "TRADITIONAL",
          "TRAINING",
          "TRANSPORT",
          "TRANSPORTATION",
          "TV_PROJECTOR",
          "TV_STAND",
          "VACUUMS_CLEANER",
          "VENTILATION_COOLING_HEATING",
          "VIDEO_DVDPLAYER",
          "VIOLINS",
          "VOLUNTEERS",
          "WALL_CLOCK",
          "WASHING_CLEANING",
          "WASHING_MACHINES",
          "WATCHES",
          "WATER_COOLER",
          "WATER_COOLER_REFINERY",
          "WC_ACCESSORIES",
          "WIND",
          "WINTER_SPORTS",
          "WORK_EQUIPMENT",
          "YARN_LIGHTS",
          "ARTICLE_MAGNIFIER",
          "ARTICLE_MAGNIFIER_F",
          "FOOTNOTE",
          "SPARKLES_F",
          "HAND_CLICK",
          "WHATS_APP",
          "CHAT_SPARKLES"
        ],
        "type": "string"
      },
      "GetPostPricingResponseReorder": {
        "properties": {
          "available": {
            "description": "Indicates if the post can be reordered. If false, the reorder API will return an error",
            "type": "boolean"
          },
          "cost_rials": {
            "description": "The cost of reordering in rials",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetPostResponseBusinessData": {
        "properties": {
          "business_name": {
            "type": "string"
          },
          "business_type": {
            "$ref": "#/components/schemas/PremiumPanelBusinessDataSubBusinessType"
          }
        },
        "type": "object"
      },
      "GetServiceTypesResponseServiceTypeData": {
        "properties": {
          "display": {
            "type": "string"
          },
          "slug": {
            "$ref": "#/components/schemas/appsServiceType"
          }
        },
        "type": "object"
      },
      "ImageCarouselRowImageItem": {
        "properties": {
          "description": {
            "type": "string"
          },
          "image_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MessageFileData": {
        "properties": {
          "link": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "size_bytes": {
            "format": "uint64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MessageImageData": {
        "properties": {
          "height_px": {
            "format": "int64",
            "type": "integer"
          },
          "link": {
            "type": "string"
          },
          "size_bytes": {
            "format": "uint64",
            "type": "string"
          },
          "width_px": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MessageLocationData": {
        "properties": {
          "latitude": {
            "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
            "format": "double",
            "type": "number"
          },
          "longitude": {
            "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "MessageSender": {
        "properties": {
          "side": {
            "$ref": "#/components/schemas/chatapiMessageSenderSide"
          },
          "type": {
            "$ref": "#/components/schemas/chatapiMessageSenderType"
          }
        },
        "type": "object"
      },
      "MessageVideoData": {
        "properties": {
          "link": {
            "type": "string"
          },
          "size_bytes": {
            "format": "uint64",
            "type": "string"
          },
          "thumbnail_link": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MessageVoiceData": {
        "properties": {
          "link": {
            "type": "string"
          },
          "size_bytes": {
            "format": "uint64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OAuthScopeScope": {
        "enum": [
          "POST_ADDON_CREATE",
          "USER_PHONE",
          "USER_ID",
          "USER_ADDON_CREATE",
          "CHAT_MESSAGE_SEND",
          "CHAT_CONVERSATION_READ",
          "USER_POSTS_GET",
          "CHAT_POST_CONVERSATIONS_READ",
          "CHAT_POST_CONVERSATIONS_MESSAGE_SEND",
          "CHAT_SUPPLIER_ALL_CONVERSATIONS_READ",
          "CHAT_SUPPLIER_ALL_CONVERSATIONS_MESSAGE_SEND",
          "CHAT_BOT_USER_MESSAGE_SEND",
          "USER_VERIFICATION_CREATE",
          "OFFLINE_ACCESS",
          "OPENID",
          "PAYMENT_ALL_POSTS_PRICING_READ",
          "PAYMENT_ALL_POSTS_REORDER",
          "MANAGEMENT_APPS_READ",
          "MANAGEMENT_APPS_WRITE",
          "POST_ONGOING_IMAGES_GET",
          "USER_POSTS_ADDON_CREATE",
          "POST_EDIT",
          "CONVERSATION_SEND_MESSAGE",
          "BUSINESS_ADDON_CREATE",
          "POST_SEMANTIC_CREATE",
          "NOTIFICATION_ACCESS_REVOCATION"
        ],
        "type": "string"
      },
      "PaymentReorderPostBody": {
        "properties": {
          "extra_details": {
            "description": "Additional details that you want to send to the Kenar side. This field is optional and can be used to solve inconsistencies in the transaction.",
            "type": "string"
          },
          "id": {
            "description": "A Version 4 uuid that must be unique for each payment. This uuid must be generated on your side and sent in the request. If an id is sent that has a successful or semi-successful transaction on the Kenar side, you will receive an error.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PostEditPostBody": {
        "properties": {
          "description": {
            "type": "string"
          },
          "image_paths": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PremiumPanelBusinessDataSubBusinessType": {
        "enum": [
          "CAR",
          "REAL_ESTATE",
          "JOBS",
          "MARKETPLACE",
          "SERVICES"
        ],
        "type": "string"
      },
      "SearchPostItemCommunityFields": {
        "type": "object"
      },
      "SearchPostItemElectronicDevicesFields": {
        "type": "object"
      },
      "SearchPostItemHomeKitchenFields": {
        "type": "object"
      },
      "SearchPostItemJobsFields": {
        "type": "object"
      },
      "SearchPostItemLeisureHobbiesFields": {
        "type": "object"
      },
      "SearchPostItemPersonalGoodsFields": {
        "type": "object"
      },
      "SearchPostItemPrice": {
        "properties": {
          "mode": {
            "type": "string"
          },
          "value": {
            "format": "uint64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SearchPostItemRealEstateFields": {
        "properties": {
          "credit": {
            "$ref": "#/components/schemas/SearchPostItemPrice"
          },
          "daily_rent": {
            "format": "uint64",
            "type": "string"
          },
          "floor": {
            "format": "int32",
            "type": "integer"
          },
          "has_elevator": {
            "type": "boolean"
          },
          "has_parking": {
            "type": "boolean"
          },
          "rent": {
            "$ref": "#/components/schemas/SearchPostItemPrice"
          },
          "rooms": {
            "type": "string"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SearchPostItemServicesFields": {
        "type": "object"
      },
      "SearchPostItemToolsMaterialsEquipmentFields": {
        "type": "object"
      },
      "SearchPostItemVehiclesFields": {
        "properties": {
          "custom_post_subtitle": {
            "type": "string"
          },
          "installment_sale": {
            "type": "string"
          },
          "usage": {
            "format": "uint64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SemanticCreatePostSemanticBody": {
        "properties": {
          "cost": {
            "format": "int32",
            "type": "integer"
          },
          "semantic": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "ticket_uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SemanticCreateUserSemanticBody": {
        "properties": {
          "cost": {
            "format": "int32",
            "type": "integer"
          },
          "phone": {
            "type": "string"
          },
          "semantic": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "ticket_uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "addonsAction": {
        "description": "Represents an action that can be performed",
        "properties": {
          "get_dynamic_action": {
            "$ref": "#/components/schemas/addonsGetDynamicAction"
          },
          "open_direct_link": {
            "description": "An action to send user to your URL directly with just a resource id (if applicable)",
            "example": "https://your-site.com/some-path",
            "type": "string"
          },
          "open_server_link": {
            "$ref": "#/components/schemas/addonsOpenServerLink"
          }
        },
        "title": "Action",
        "type": "object"
      },
      "addonsAddonLinkage": {
        "enum": [
          "POST_DETAILS",
          "POST_MANAGEMENT"
        ],
        "type": "string"
      },
      "addonsAddonMetaData": {
        "properties": {
          "app": {
            "$ref": "#/components/schemas/appsApp"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "last_modified": {
            "format": "date-time",
            "type": "string"
          },
          "service_tags": {
            "items": {
              "$ref": "#/components/schemas/appsServiceTag"
            },
            "type": "array"
          },
          "status": {
            "$ref": "#/components/schemas/addonsStatus"
          }
        },
        "type": "object"
      },
      "addonsAddonSecondaryLinkage": {
        "properties": {
          "position": {
            "$ref": "#/components/schemas/AddonSecondaryLinkagePosition"
          },
          "widgets": {
            "$ref": "#/components/schemas/addonsWidgets"
          }
        },
        "type": "object"
      },
      "addonsAddonSecondaryLinks": {
        "properties": {
          "secondary_linkages": {
            "items": {
              "$ref": "#/components/schemas/addonsAddonSecondaryLinkage"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "addonsAddonSelector": {
        "properties": {
          "brand_models": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "cities": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "districts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tokens": {
            "items": {
              "type": "string"
            },
            "title": "(OR) post is selected if the following array contains corresponding field",
            "type": "array"
          }
        },
        "title": "(AND) post is selected by this selector if all of the following conditions\nmatches",
        "type": "object"
      },
      "addonsAddonSemantic": {
        "description": "This is the message extracted by OpenPlatform from service provider\nsemantics. Guidelines:\n - Always check to see if an appropriate enum field or value exists before\n adding one.\n - Zero value of every enum should be {ENUM_NAME}_UNSPECIFIED.\n - Enum values should not correspond to any specific post or person\n attribute.",
        "properties": {
          "car_verification_failure_reason": {
            "$ref": "#/components/schemas/AddonSemanticCarVerificationStage"
          },
          "car_verification_last_successful_stage": {
            "$ref": "#/components/schemas/AddonSemanticCarVerificationStage"
          },
          "identity_verification_failure_reason": {
            "$ref": "#/components/schemas/AddonSemanticIdentityVerificationStage"
          },
          "identity_verification_last_successful_stage": {
            "$ref": "#/components/schemas/AddonSemanticIdentityVerificationStage"
          },
          "identity_verification_result": {
            "$ref": "#/components/schemas/AddonSemanticIdentityVerificationResult"
          },
          "inspection_result": {
            "$ref": "#/components/schemas/AddonSemanticInspectionResult"
          },
          "new_face_verification_result": {
            "$ref": "#/components/schemas/AddonSemanticNewFaceVerificationResult"
          },
          "ownership_result": {
            "$ref": "#/components/schemas/AddonSemanticOwnershipResult"
          },
          "payment_method": {
            "$ref": "#/components/schemas/addonsAddonSemanticPaymentMethod"
          },
          "post_verification_result": {
            "$ref": "#/components/schemas/AddonSemanticPostVerificationResult"
          },
          "status": {
            "$ref": "#/components/schemas/addonsAddonSemanticStatus"
          }
        },
        "type": "object"
      },
      "addonsAddonSemanticPaymentMethod": {
        "enum": [
          "SECURE"
        ],
        "title": "- SECURE: this value results in badge in matching",
        "type": "string"
      },
      "addonsAddonSemanticStatus": {
        "enum": [
          "SUCCEEDED",
          "FAILED",
          "EXPIRED",
          "PENDING"
        ],
        "type": "string"
      },
      "addonsBackFillBusinessAddonResponse": {
        "type": "object"
      },
      "addonsBusinessAddon": {
        "properties": {
          "business_ref": {
            "type": "string"
          },
          "meta_data": {
            "$ref": "#/components/schemas/addonsAddonMetaData"
          },
          "widgets": {
            "$ref": "#/components/schemas/addonsWidgets"
          }
        },
        "type": "object"
      },
      "addonsButtonBar": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/addonsAction"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "addonsCreatePostAddonRequest": {
        "properties": {
          "link_in_spec": {
            "type": "string"
          },
          "notes": {
            "title": "arbitrary data provided by addon creator",
            "type": "string"
          },
          "selector": {
            "$ref": "#/components/schemas/addonsAddonSelector"
          },
          "semantic": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "semantic_sensitives": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "token": {
            "type": "string"
          },
          "widgets": {
            "$ref": "#/components/schemas/addonsWidgets"
          }
        },
        "type": "object"
      },
      "addonsCreatePostAddonResponseV2": {
        "type": "object"
      },
      "addonsCreateUserAddonResponseV2": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "addonsDescriptionRow": {
        "properties": {
          "expandable": {
            "type": "boolean"
          },
          "has_divider": {
            "type": "boolean"
          },
          "text": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "addonsEvaluationRow": {
        "properties": {
          "icon_name": {
            "$ref": "#/components/schemas/DivarIconsIconName"
          },
          "indicator_percentage": {
            "format": "int32",
            "type": "integer"
          },
          "indicator_text": {
            "type": "string"
          },
          "left": {
            "$ref": "#/components/schemas/addonsEvaluationRowSection"
          },
          "middle": {
            "$ref": "#/components/schemas/addonsEvaluationRowSection"
          },
          "right": {
            "$ref": "#/components/schemas/addonsEvaluationRowSection"
          }
        },
        "type": "object"
      },
      "addonsEvaluationRowSection": {
        "properties": {
          "section_color": {
            "$ref": "#/components/schemas/addonsWidgetColor"
          },
          "text": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "addonsEventRow": {
        "properties": {
          "has_divider": {
            "type": "boolean"
          },
          "icon_name": {
            "$ref": "#/components/schemas/DivarIconsIconName"
          },
          "image_id": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "addonsGetBusinessAddonsResponse": {
        "properties": {
          "addons": {
            "items": {
              "$ref": "#/components/schemas/addonsBusinessAddon"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "addonsGetDynamicAction": {
        "description": "Represents a dynamic action that can be fetched and invoked on user's device",
        "properties": {
          "data": {
            "description": "A data that you can set and will be returned to you upon user click to recognize the action",
            "example": {
              "your-internal-id": "something"
            },
            "type": "object"
          }
        },
        "title": "Get Dynamic Action",
        "type": "object"
      },
      "addonsGetPostAddonsResponse": {
        "properties": {
          "addons": {
            "items": {
              "$ref": "#/components/schemas/addonsPostAddon"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "addonsGetUserAddonsResponse": {
        "properties": {
          "addons": {
            "items": {
              "$ref": "#/components/schemas/addonsUserAddon"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "addonsGetUserPostAddonsResponse": {
        "properties": {
          "addons": {
            "items": {
              "$ref": "#/components/schemas/addonsPostAddon"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "addonsGroupInfoRow": {
        "properties": {
          "has_divider": {
            "type": "boolean"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/addonsGroupInfoRowGroupInfoItem"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "addonsGroupInfoRowGroupInfoItem": {
        "properties": {
          "title": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "addonsImageCarouselRow": {
        "properties": {
          "has_divider": {
            "type": "boolean"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ImageCarouselRowImageItem"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "addonsOpenServerLink": {
        "description": "An action to pass complete session data and retrieve redirect location from your server on each user action",
        "properties": {
          "data": {
            "description": "A data that you can set and will be returned to you upon user click to recognize the action",
            "example": {
              "your-internal-id": "something"
            },
            "type": "object"
          }
        },
        "title": "Open Server Link",
        "type": "object"
      },
      "addonsPostAddon": {
        "properties": {
          "app": {
            "$ref": "#/components/schemas/appsApp"
          },
          "linkage": {
            "$ref": "#/components/schemas/addonsAddonLinkage"
          },
          "meta_data": {
            "$ref": "#/components/schemas/addonsAddonMetaData"
          },
          "score": {
            "format": "int64",
            "type": "string"
          },
          "secondary_links": {
            "$ref": "#/components/schemas/addonsAddonSecondaryLinks"
          },
          "selector": {
            "$ref": "#/components/schemas/addonsAddonSelector"
          },
          "semantic": {
            "additionalProperties": {
              "type": "string"
            },
            "title": "deprecated",
            "type": "object"
          },
          "semantic_data": {
            "$ref": "#/components/schemas/addonsAddonSemantic"
          },
          "semantic_sensitives": {
            "items": {
              "type": "string"
            },
            "title": "deprecated",
            "type": "array"
          },
          "sensitive_semantic": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "token": {
            "type": "string"
          },
          "widgets": {
            "$ref": "#/components/schemas/addonsWidgets"
          },
          "widgets_semantic": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "addonsScoreRow": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/addonsAction"
          },
          "descriptive_score": {
            "type": "string"
          },
          "has_divider": {
            "type": "boolean"
          },
          "icon_name": {
            "$ref": "#/components/schemas/DivarIconsIconName"
          },
          "percentage_score": {
            "format": "int32",
            "type": "integer"
          },
          "score_color": {
            "$ref": "#/components/schemas/addonsWidgetColor"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "addonsSelectorRow": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/addonsAction"
          },
          "has_divider": {
            "type": "boolean"
          },
          "icon_name": {
            "$ref": "#/components/schemas/DivarIconsIconName"
          },
          "image_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "addonsSendAddonDeletionEventsResponse": {
        "type": "object"
      },
      "addonsStatus": {
        "enum": [
          "ACTIVE",
          "HIDDEN",
          "DELETED"
        ],
        "type": "string"
      },
      "addonsSubtitleRow": {
        "properties": {
          "has_divider": {
            "type": "boolean"
          },
          "text": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "addonsTitleRow": {
        "properties": {
          "has_divider": {
            "type": "boolean"
          },
          "text": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "addonsUserAddon": {
        "properties": {
          "divar_user_id": {
            "title": "new field",
            "type": "string"
          },
          "filters": {
            "$ref": "#/components/schemas/addonsUserAddonFilters"
          },
          "meta_data": {
            "$ref": "#/components/schemas/addonsAddonMetaData"
          },
          "phone": {
            "title": "will be deprecated",
            "type": "string"
          },
          "semantic": {
            "additionalProperties": {
              "type": "string"
            },
            "title": "deprecated",
            "type": "object"
          },
          "semantic_data": {
            "$ref": "#/components/schemas/addonsAddonSemantic"
          },
          "sensitive_semantic": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "widgets": {
            "$ref": "#/components/schemas/addonsWidgets"
          },
          "widgets_semantic": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "addonsUserAddonFilters": {
        "properties": {
          "categories": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "addonsWidget": {
        "properties": {
          "button_bar": {
            "$ref": "#/components/schemas/addonsButtonBar"
          },
          "description_row": {
            "$ref": "#/components/schemas/addonsDescriptionRow"
          },
          "evaluation_row": {
            "$ref": "#/components/schemas/addonsEvaluationRow"
          },
          "event_row": {
            "$ref": "#/components/schemas/addonsEventRow"
          },
          "group_info_row": {
            "$ref": "#/components/schemas/addonsGroupInfoRow"
          },
          "image_carousel_row": {
            "$ref": "#/components/schemas/addonsImageCarouselRow"
          },
          "score_row": {
            "$ref": "#/components/schemas/addonsScoreRow"
          },
          "selector_row": {
            "$ref": "#/components/schemas/addonsSelectorRow"
          },
          "semantic_paths": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "subtitle_row": {
            "$ref": "#/components/schemas/addonsSubtitleRow"
          },
          "title_row": {
            "$ref": "#/components/schemas/addonsTitleRow"
          }
        },
        "type": "object"
      },
      "addonsWidgetColor": {
        "enum": [
          "WARNING_SECONDARY",
          "WARNING_PRIMARY",
          "ERROR_PRIMARY",
          "SUCCESS_PRIMARY",
          "SUCCESS_SECONDARY"
        ],
        "type": "string"
      },
      "addonsWidgets": {
        "type": "object"
      },
      "appsApp": {
        "properties": {
          "avatar": {
            "type": "string"
          },
          "display": {
            "type": "string"
          },
          "divar_identification_key": {
            "type": "string"
          },
          "service_tags": {
            "items": {
              "$ref": "#/components/schemas/appsServiceTag"
            },
            "title": "deprecated - use AddonMetaData.service_tags",
            "type": "array"
          },
          "service_type": {
            "$ref": "#/components/schemas/appsServiceType"
          },
          "slug": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/appsAppStatus"
          }
        },
        "type": "object"
      },
      "appsAppStatus": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/appsAppStatusStatus"
          }
        },
        "type": "object"
      },
      "appsAppStatusStatus": {
        "enum": [
          "ACTIVE",
          "INACTIVE",
          "SUSPENDED",
          "DEVELOPMENT"
        ],
        "type": "string"
      },
      "appsServiceTag": {
        "enum": [
          "VERIFIED",
          "IDENTITY_VERIFIED",
          "POST_VERIFIED",
          "SECURE_PAYMENT",
          "POST_OWNERSHIP_VERIFIED",
          "EXPERT_INSPECTED",
          "CAR_EXPERT_INSPECTED",
          "HOME_EXPERT_INSPECTED",
          "MOBILE_EXPERT_INSPECTED"
        ],
        "type": "string"
      },
      "appsServiceType": {
        "enum": [
          "FUNC_CLICK_AND_COLLECT",
          "FUNC_DELIVERY",
          "FUNC_SECURE_PAYMENT",
          "LEAD_GEN_PURE",
          "LEAD_GEN_LOAN",
          "REPORT_INSPECTION",
          "REPORT_PRICE_EVALUATION",
          "REPORT_VERIFICATION",
          "FUNC_CONTRACT",
          "FUNC_FINANCING",
          "USER_FACE_ID_VERIFICATION",
          "POST_VERIFICATION",
          "INTERNAL",
          "USER_BACKGROUND_VERIFICATION",
          "USER_BUSINESS_VERIFICATION",
          "CHARITY",
          "SECURE_PAYMENT_POST_PROMOTION",
          "PHOTOGRAPHY",
          "DOWNLOADABLE_CONTENT_GENERATION",
          "REPORT_INSPECTION_CHAT",
          "ADDITIONAL_INFORMATION",
          "ACCOUNTING",
          "ASSISTANT",
          "ADVERTISEMENT",
          "CONTRACT_POST",
          "SITE_BUILDER",
          "FORM_BUILDER",
          "AUCTION",
          "POST_DETAIL_ENHANCER",
          "POST_REORDER"
        ],
        "type": "string"
      },
      "assetsEnumOption": {
        "properties": {
          "display": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "assetsGetBodyStatusesResponse": {
        "properties": {
          "body_status": {
            "items": {
              "$ref": "#/components/schemas/assetsEnumOption"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "assetsGetBrandModelsResponse": {
        "properties": {
          "brand_models": {
            "items": {
              "$ref": "#/components/schemas/assetsEnumOption"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "assetsGetCategoriesResponse": {
        "properties": {
          "categories": {
            "items": {
              "$ref": "#/components/schemas/assetsEnumOption"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "assetsGetCitiesResponse": {
        "properties": {
          "cities": {
            "items": {
              "$ref": "#/components/schemas/assetsEnumOption"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "assetsGetColorsResponse": {
        "properties": {
          "colors": {
            "items": {
              "$ref": "#/components/schemas/assetsEnumOption"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "assetsGetDistrictsResponse": {
        "properties": {
          "districts": {
            "items": {
              "$ref": "#/components/schemas/assetsEnumOption"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "assetsGetInternalStoragesResponse": {
        "properties": {
          "internal_storages": {
            "items": {
              "$ref": "#/components/schemas/assetsEnumOption"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "assetsGetOAuthScopesResponse": {
        "properties": {
          "scopes": {
            "items": {
              "$ref": "#/components/schemas/assetsGetOAuthScopesResponseAppOauthScope"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "assetsGetOAuthScopesResponseAppOauthScope": {
        "properties": {
          "description": {
            "type": "string"
          },
          "display": {
            "type": "string"
          },
          "lifecycle_state": {
            "$ref": "#/components/schemas/assetsGetOAuthScopesResponseLifeCycleState"
          },
          "slug": {
            "$ref": "#/components/schemas/OAuthScopeScope"
          }
        },
        "type": "object"
      },
      "assetsGetOAuthScopesResponseLifeCycleState": {
        "enum": [
          "EXPERIMENTAL",
          "ACTIVE",
          "DEPRECATING_SOON",
          "DEPRECATED"
        ],
        "type": "string"
      },
      "assetsGetPermissionsResponse": {
        "properties": {
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/assetsGetPermissionsResponsePermission"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "assetsGetPermissionsResponseLifeCycleState": {
        "enum": [
          "EXPERIMENTAL",
          "ACTIVE",
          "DEPRECATING_SOON",
          "DEPRECATED"
        ],
        "type": "string"
      },
      "assetsGetPermissionsResponsePermission": {
        "properties": {
          "description": {
            "type": "string"
          },
          "display": {
            "type": "string"
          },
          "lifecycle_state": {
            "$ref": "#/components/schemas/assetsGetPermissionsResponseLifeCycleState"
          },
          "slug": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "assetsGetRamMemoriesResponse": {
        "properties": {
          "ram_memories": {
            "items": {
              "$ref": "#/components/schemas/assetsEnumOption"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "assetsGetServiceTypesResponse": {
        "properties": {
          "service_types": {
            "items": {
              "$ref": "#/components/schemas/GetServiceTypesResponseServiceTypeData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "authorizationAPICallerInfo": {
        "properties": {
          "api_key_id": {
            "format": "int32",
            "type": "integer"
          },
          "api_key_id_v2": {
            "type": "string"
          },
          "app": {
            "$ref": "#/components/schemas/appsApp"
          },
          "scopes": {
            "items": {
              "$ref": "#/components/schemas/authorizationOAuthScope"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "authorizationOAuthScope": {
        "properties": {
          "resource_id": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/OAuthScopeScope"
          }
        },
        "title": "Represents standard oauth scope parsed using `PERMISSION_ENUM__{resource_id}`\nformat string. e.g. EDIT_POST__AZrOi1eL",
        "type": "object"
      },
      "chatapiChatBotSendMessageResponse": {
        "properties": {
          "conversation_id": {
            "description": "ID of the conversation created or updated",
            "example": "conv_123456",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "chatapiChatButton": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/addonsAction"
          },
          "caption": {
            "type": "string"
          },
          "icon": {
            "$ref": "#/components/schemas/DivarIconsIconName"
          },
          "icon_name": {
            "title": "deprecated",
            "type": "string"
          }
        },
        "type": "object"
      },
      "chatapiChatButtonGrid": {
        "properties": {
          "rows": {
            "items": {
              "$ref": "#/components/schemas/chatapiChatButtonRow"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "chatapiChatButtonRow": {
        "properties": {
          "buttons": {
            "items": {
              "$ref": "#/components/schemas/chatapiChatButton"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "chatapiConversation": {
        "properties": {
          "id": {
            "type": "string"
          },
          "post_token": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/chatapiConversationType"
          }
        },
        "type": "object"
      },
      "chatapiConversationSendMessageResponse": {
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "chatapiConversationType": {
        "enum": [
          "POST",
          "BOT"
        ],
        "type": "string"
      },
      "chatapiGenerateUploadTokenRequest": {
        "type": "object"
      },
      "chatapiGenerateUploadTokenResponse": {
        "properties": {
          "token": {
            "description": "A url safe base64 encoded token that can be used in the upload endpoint",
            "example": "some_random_base64",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "chatapiGetConversationResponse": {
        "properties": {
          "conversation": {
            "$ref": "#/components/schemas/chatapiConversation"
          },
          "messages": {
            "description": "List of messages in the conversation",
            "items": {
              "$ref": "#/components/schemas/chatapiMessage"
            },
            "type": "array"
          }
        },
        "required": [
          "conversation",
          "messages"
        ],
        "type": "object"
      },
      "chatapiMessage": {
        "properties": {
          "conversation": {
            "$ref": "#/components/schemas/chatapiConversation"
          },
          "file_data": {
            "$ref": "#/components/schemas/MessageFileData"
          },
          "id": {
            "type": "string"
          },
          "image_data": {
            "$ref": "#/components/schemas/MessageImageData"
          },
          "location_data": {
            "$ref": "#/components/schemas/MessageLocationData"
          },
          "sender": {
            "$ref": "#/components/schemas/MessageSender"
          },
          "sent_at": {
            "format": "date-time",
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/chatapiMessageType"
          },
          "video_data": {
            "$ref": "#/components/schemas/MessageVideoData"
          },
          "voice_data": {
            "$ref": "#/components/schemas/MessageVoiceData"
          }
        },
        "type": "object"
      },
      "chatapiMessageSenderSide": {
        "enum": [
          "BUYER",
          "SELLER"
        ],
        "type": "string"
      },
      "chatapiMessageSenderType": {
        "enum": [
          "HUMAN",
          "BOT"
        ],
        "type": "string"
      },
      "chatapiMessageType": {
        "enum": [
          "TEXT",
          "IMAGE",
          "FILE",
          "VOICE",
          "LOCATION",
          "VIDEO"
        ],
        "type": "string"
      },
      "eventsRegisterEventSubscriptionRequest": {
        "properties": {
          "event_resource_id": {
            "type": "string"
          },
          "event_type": {
            "$ref": "#/components/schemas/eventsRegisterEventSubscriptionRequestEventType"
          },
          "metadata": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "eventsRegisterEventSubscriptionRequestEventType": {
        "enum": [
          "NEW_MESSAGE_ON_POST",
          "POST_UPDATE"
        ],
        "type": "string"
      },
      "eventsRegisterEventSubscriptionResponse": {
        "type": "object"
      },
      "finderGetAllDevelopmentPostsResponse": {
        "properties": {
          "development_posts": {
            "items": {
              "$ref": "#/components/schemas/managementDevelopmentPost"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "finderGetPostResponse": {
        "properties": {
          "business_data": {
            "$ref": "#/components/schemas/GetPostResponseBusinessData"
          },
          "category": {
            "type": "string"
          },
          "chat_enabled": {
            "type": "boolean"
          },
          "city": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "district": {
            "type": "string"
          },
          "first_published_at": {
            "format": "date-time",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/finderPostExtState"
          },
          "token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "finderGetUserPostsResponse": {
        "properties": {
          "posts": {
            "items": {
              "$ref": "#/components/schemas/finderGetUserPostsResponsePost"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "finderGetUserPostsResponsePost": {
        "properties": {
          "category": {
            "type": "string"
          },
          "images": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "finderGetUserRequest": {
        "type": "object"
      },
      "finderPostExtState": {
        "enum": [
          "PUBLISHED",
          "REVIEW_REQ",
          "PAYMENT_REQ",
          "RETIRED"
        ],
        "type": "string"
      },
      "finderSearchPostItem": {
        "properties": {
          "category": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "community_fields": {
            "$ref": "#/components/schemas/SearchPostItemCommunityFields"
          },
          "electronic_devices_fields": {
            "$ref": "#/components/schemas/SearchPostItemElectronicDevicesFields"
          },
          "home_kitchen_fields": {
            "$ref": "#/components/schemas/SearchPostItemHomeKitchenFields"
          },
          "jobs_fields": {
            "$ref": "#/components/schemas/SearchPostItemJobsFields"
          },
          "last_modified_at": {
            "format": "date-time",
            "type": "string"
          },
          "leisure_hobbies_fields": {
            "$ref": "#/components/schemas/SearchPostItemLeisureHobbiesFields"
          },
          "personal_goods_fields": {
            "$ref": "#/components/schemas/SearchPostItemPersonalGoodsFields"
          },
          "price": {
            "$ref": "#/components/schemas/SearchPostItemPrice"
          },
          "real_estate_fields": {
            "$ref": "#/components/schemas/SearchPostItemRealEstateFields"
          },
          "services_fields": {
            "$ref": "#/components/schemas/SearchPostItemServicesFields"
          },
          "title": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "tools_materials_equipment_fields": {
            "$ref": "#/components/schemas/SearchPostItemToolsMaterialsEquipmentFields"
          },
          "vehicles_fields": {
            "$ref": "#/components/schemas/SearchPostItemVehiclesFields"
          }
        },
        "type": "object"
      },
      "finderSearchPostV2Response": {
        "properties": {
          "posts": {
            "items": {
              "$ref": "#/components/schemas/finderSearchPostItem"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "finderSearchPostsV2Request": {
        "properties": {
          "category": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "districts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "query": {
            "$ref": "#/components/schemas/finderSearchQuery"
          }
        },
        "type": "object"
      },
      "finderSearchQuery": {
        "properties": {
          "brand_model": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "credit": {
            "$ref": "#/components/schemas/finderSearchQueryNumberRange"
          },
          "only_with_parking": {
            "type": "boolean"
          },
          "production_year": {
            "$ref": "#/components/schemas/finderSearchQueryNumberRange"
          },
          "rent": {
            "$ref": "#/components/schemas/finderSearchQueryNumberRange"
          },
          "rooms": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "size": {
            "$ref": "#/components/schemas/finderSearchQueryNumberRange"
          },
          "usage": {
            "$ref": "#/components/schemas/finderSearchQueryNumberRange"
          }
        },
        "type": "object"
      },
      "finderSearchQueryNumberRange": {
        "properties": {
          "max": {
            "format": "int64",
            "type": "string"
          },
          "min": {
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "finderUser": {
        "properties": {
          "phone_number": {
            "type": "string"
          },
          "phone_numbers": {
            "description": "deprecated",
            "items": {
              "type": "string"
            },
            "title": "requires OAuth scope: USER_PHONE",
            "type": "array"
          },
          "user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "googlerpcStatus": {
        "properties": {
          "code": {
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "items": {
              "$ref": "#/components/schemas/protobufAny"
            },
            "type": "array"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "managementDevelopmentPost": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "mng_token": {
            "type": "string"
          },
          "preset": {
            "$ref": "#/components/schemas/managementPreset"
          },
          "token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "managementPreset": {
        "enum": [
          "LIGHT",
          "CRAFTSMEN",
          "MOBILE_PHONES",
          "APARTMENT_SELL",
          "SUITE_APARTMENT"
        ],
        "type": "string"
      },
      "paymentGetBalanceResponse": {
        "properties": {
          "balance_rials": {
            "description": "The balance of the app in rials",
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      "paymentGetPostPricingResponse": {
        "properties": {
          "reorder": {
            "$ref": "#/components/schemas/GetPostPricingResponseReorder"
          }
        },
        "type": "object"
      },
      "paymentGetTransactionResponse": {
        "properties": {
          "transaction": {
            "$ref": "#/components/schemas/paymentTransaction"
          }
        },
        "type": "object"
      },
      "paymentReorderPostResponse": {
        "properties": {
          "cost_rials": {
            "description": "The cost of the transaction in rials for your application",
            "format": "int64",
            "type": "string"
          },
          "id": {
            "description": "Same uuid when creating transaction",
            "type": "string"
          }
        },
        "type": "object"
      },
      "paymentTransaction": {
        "properties": {
          "cost_rials": {
            "description": "The cost of the transaction in rials for your application",
            "format": "int64",
            "type": "string"
          },
          "extra_details": {
            "description": "Same Additional details which you sent in the request",
            "type": "string"
          },
          "id": {
            "description": "Same uuid when creating transaction",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/paymentTransactionState"
          },
          "type": {
            "$ref": "#/components/schemas/paymentTransactionType"
          }
        },
        "type": "object"
      },
      "paymentTransactionState": {
        "enum": [
          "TRANSACTION_STATE_PENDING",
          "TRANSACTION_STATE_COMPLETED",
          "TRANSACTION_STATE_FAILED",
          "TRANSACTION_STATE_REFUNDED"
        ],
        "type": "string"
      },
      "paymentTransactionType": {
        "enum": [
          "TRANSACTION_TYPE_REORDER"
        ],
        "type": "string"
      },
      "payment_ticketGenerateResponse": {
        "properties": {
          "ticket_uuid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_ticketValidateRequest": {
        "properties": {
          "phone_number": {
            "description": "Deprecated. Use divar_user_id.",
            "type": "string"
          },
          "service_cost": {
            "format": "int32",
            "type": "integer"
          },
          "ticket_uuid": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "payment_ticketValidateResponse": {
        "properties": {
          "issuer_payload": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "postEditPostResponse": {
        "type": "object"
      },
      "postGetImageUploadURLResponse": {
        "properties": {
          "upload_url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "protobufAny": {
        "additionalProperties": {},
        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
        "properties": {
          "@type": {
            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "protobufNullValue": {
        "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.",
        "type": "string"
      },
      "semanticCreatePostSemanticResponse": {
        "type": "object"
      },
      "semanticCreateUserSemanticResponse": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "semanticDeleteUserSemanticResponse": {
        "type": "object"
      }
    },
    "securitySchemes": {
      "APIKey": {
        "description": "API Key retrieved from kenar management panel",
        "in": "header",
        "name": "X-API-Key",
        "type": "apiKey"
      },
      "OAuth": {
        "description": "OAuth2 access token retrieved from user",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "oauth.divar.ir/oauth2/auth",
            "refreshUrl": "oauth.divar.ir/oauth2/token",
            "scopes": {
              "BUSINESS_ADDON_CREATE.{resource_id}": "BUSINESS_ADDON_CREATE.{resource_id}",
              "CHAT_BOT_USER_MESSAGE_SEND": "CHAT_BOT_USER_MESSAGE_SEND",
              "CHAT_CONVERSATION_READ.{resource_id}": "CHAT_CONVERSATION_READ.{resource_id}",
              "CHAT_MESSAGE_SEND.{resource_id}": "CHAT_MESSAGE_SEND.{resource_id}",
              "CHAT_POST_CONVERSATIONS_MESSAGE_SEND.{resource_id}": "CHAT_POST_CONVERSATIONS_MESSAGE_SEND.{resource_id}",
              "CHAT_POST_CONVERSATIONS_READ.{resource_id}": "CHAT_POST_CONVERSATIONS_READ.{resource_id}",
              "CHAT_SUPPLIER_ALL_CONVERSATIONS_MESSAGE_SEND": "CHAT_SUPPLIER_ALL_CONVERSATIONS_MESSAGE_SEND",
              "CHAT_SUPPLIER_ALL_CONVERSATIONS_READ": "CHAT_SUPPLIER_ALL_CONVERSATIONS_READ",
              "CONVERSATION_SEND_MESSAGE.{resource_id}": "CONVERSATION_SEND_MESSAGE.{resource_id}",
              "MANAGEMENT_APPS_READ.{resource_id}": "MANAGEMENT_APPS_READ.{resource_id}",
              "MANAGEMENT_APPS_WRITE.{resource_id}": "MANAGEMENT_APPS_WRITE.{resource_id}",
              "NOTIFICATION_ACCESS_REVOCATION": "NOTIFICATION_ACCESS_REVOCATION",
              "PAYMENT_ALL_POSTS_PRICING_READ": "PAYMENT_ALL_POSTS_PRICING_READ",
              "PAYMENT_ALL_POSTS_REORDER": "PAYMENT_ALL_POSTS_REORDER",
              "POST_ADDON_CREATE.{resource_id}": "POST_ADDON_CREATE.{resource_id}",
              "POST_EDIT.{resource_id}": "POST_EDIT.{resource_id}",
              "POST_ONGOING_IMAGES_GET.{resource_id}": "POST_ONGOING_IMAGES_GET.{resource_id}",
              "POST_SEMANTIC_CREATE.{resource_id}": "POST_SEMANTIC_CREATE.{resource_id}",
              "USER_ADDON_CREATE": "USER_ADDON_CREATE",
              "USER_ID": "USER_ID",
              "USER_PHONE": "USER_PHONE",
              "USER_POSTS_ADDON_CREATE": "USER_POSTS_ADDON_CREATE",
              "USER_POSTS_GET": "USER_POSTS_GET",
              "USER_VERIFICATION_CREATE": "USER_VERIFICATION_CREATE",
              "offline_access": "offline_access",
              "openid": "openid"
            },
            "tokenUrl": "oauth.divar.ir/oauth2/token"
          }
        },
        "type": "oauth2"
      }
    }
  },
  "info": {
    "title": "Kenar API",
    "version": "1.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/experimental/open-platform/balance": {
      "get": {
        "description": "Using this API you can retrieve current balance of your app.",
        "operationId": "Payment_GetBalance",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/paymentGetBalanceResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "limited"
        ]
      }
    },
    "/experimental/open-platform/chat/bot/conversations/{conversation_id}/messages": {
      "post": {
        "description": "You can call this API with either conversation_id or user_id.\nCalling with user_id needs a access_token having CHAT_BOT_USER_MESSAGE_SEND scope.This enables you to start conversation with user from ChatBot.",
        "operationId": "ChatAPI_ChatBotSendMessage3",
        "parameters": [
          {
            "description": "Unique identifier for the conversation",
            "in": "path",
            "name": "conversation_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ChatAPIChatBotSendMessageBody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatapiChatBotSendMessageResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Send a message to a ChatBot conversation",
        "tags": [
          "ChatAPI"
        ]
      }
    },
    "/experimental/open-platform/chat/bot/users/{user_id}/messages": {
      "post": {
        "description": "You can call this API with either conversation_id or user_id.\nCalling with user_id needs a access_token having CHAT_BOT_USER_MESSAGE_SEND scope.This enables you to start conversation with user from ChatBot.",
        "operationId": "ChatAPI_ChatBotSendMessage2",
        "parameters": [
          {
            "description": "Unique identifier for the user to start or continue a conversation with",
            "in": "path",
            "name": "user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ChatAPIChatBotSendMessageBody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatapiChatBotSendMessageResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Send a message to a ChatBot conversation",
        "tags": [
          "ChatAPI"
        ]
      }
    },
    "/experimental/open-platform/chat/upload": {
      "post": {
        "description": "This API is used to generate an upload token for uploading media files.",
        "operationId": "ChatAPI_GenerateUploadToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/chatapiGenerateUploadTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatapiGenerateUploadTokenResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Generate an upload token",
        "tags": [
          "ChatAPI"
        ]
      }
    },
    "/experimental/open-platform/chatbot-conversations/{conversation_id}/messages": {
      "post": {
        "description": "You can call this API with either conversation_id or user_id.\nCalling with user_id needs a access_token having CHAT_BOT_USER_MESSAGE_SEND scope.This enables you to start conversation with user from ChatBot.",
        "operationId": "ChatAPI_ChatBotSendMessage",
        "parameters": [
          {
            "description": "Unique identifier for the conversation",
            "in": "path",
            "name": "conversation_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ChatAPIChatBotSendMessageBody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatapiChatBotSendMessageResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Send a message to a ChatBot conversation",
        "tags": [
          "ChatAPI"
        ]
      }
    },
    "/experimental/open-platform/post/{post_token}/reorder": {
      "post": {
        "description": "Use GetPostPricing API to get the cost of the service before calling this API.",
        "operationId": "Payment_ReorderPost",
        "parameters": [
          {
            "in": "path",
            "name": "post_token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReorderPostBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/paymentReorderPostResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "limited"
        ]
      }
    },
    "/experimental/open-platform/semantic/post/{token}": {
      "post": {
        "description": "In some cases, it is necessary to store information about the post in Divar without adding an addon.\nThis API expects access token having `POST_SEMANTIC_CREATE` scope.\n",
        "operationId": "Semantic_CreatePostSemantic",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SemanticCreatePostSemanticBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/semanticCreatePostSemanticResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Create Post Semantic",
        "tags": [
          "Semantic"
        ]
      }
    },
    "/experimental/open-platform/transactions/{id}": {
      "get": {
        "description": "Using this API you can retrieve transaction details.",
        "operationId": "Payment_GetTransaction",
        "parameters": [
          {
            "description": "The unique identifier for the transaction, same as the id in the request",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/paymentGetTransactionResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "tags": [
          "limited"
        ]
      }
    },
    "/v1/open-platform/add-ons/post/{token}": {
      "delete": {
        "description": "You can only delete addons which are created by your app.",
        "operationId": "Addons_DeletePostAddon",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Delete an Addon from a post",
        "tags": [
          "Addons"
        ]
      }
    },
    "/v1/open-platform/addons/post/{token}": {
      "delete": {
        "description": "You can only delete addons which are created by your app.",
        "operationId": "Addons_DeletePostAddon2",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Delete an Addon from a post",
        "tags": [
          "Addons"
        ]
      }
    },
    "/v1/open-platform/addons/user/{id}": {
      "delete": {
        "description": "This will delete all correlated Addons to all user posts.\nYou can only delete Addons which are created by your app.",
        "operationId": "Addons_DeleteUserAddon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Delete an UserAddon",
        "tags": [
          "Addons"
        ]
      }
    },
    "/v1/open-platform/addons/user/{phone}": {
      "get": {
        "description": "Retrieve all UserAddons of a user.",
        "operationId": "Addons_GetUserAddons",
        "parameters": [
          {
            "in": "path",
            "name": "phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "divar_user_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addonsGetUserAddonsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Retrieve all UserAddons",
        "tags": [
          "Addons"
        ]
      }
    },
    "/v1/open-platform/assets/body-status": {
      "get": {
        "description": "Get all available body-status options in Divar vehicle categories.This provides persian translations for each body-status options which used in posts.",
        "operationId": "Assets_GetBodyStatuses",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assetsGetBodyStatusesResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get available body-status options in Divar vehicle categories",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/open-platform/assets/brand-model/{category}": {
      "get": {
        "description": "Get all Divar brand models in specified category.This provides persian translations for each brand models which used in posts.",
        "operationId": "Assets_GetBrandModels",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assetsGetBrandModelsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get brand models in a Divar category",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/open-platform/assets/category": {
      "get": {
        "description": "Get all Divar categories. This provides persian translations for each category which used in posts.",
        "operationId": "Assets_GetCategories",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assetsGetCategoriesResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get Divar categories",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/open-platform/assets/city": {
      "get": {
        "description": "Get all Divar cities. This provides persian translations for each city which used in posts.",
        "operationId": "Assets_GetCities",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assetsGetCitiesResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get Divar cities",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/open-platform/assets/color/{category}": {
      "get": {
        "description": "Get all Divar colors in specified category.This provides persian translations for each color which used in posts.",
        "operationId": "Assets_GetColors",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assetsGetColorsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get colors in a Divar category",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/open-platform/assets/district": {
      "get": {
        "description": "Get all Divar districts. This provides persian translations for each district which used in posts.",
        "operationId": "Assets_GetDistricts",
        "parameters": [
          {
            "in": "query",
            "name": "city_slug",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assetsGetDistrictsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get Divar districts",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/open-platform/assets/district/{city_slug}": {
      "get": {
        "description": "Get all Divar districts. This provides persian translations for each district which used in posts.",
        "operationId": "Assets_GetDistricts2",
        "parameters": [
          {
            "in": "path",
            "name": "city_slug",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assetsGetDistrictsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get Divar districts",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/open-platform/assets/internal-storage": {
      "get": {
        "description": "Get all available internal-storage options in Divar mobile categories.This provides persian translations for each internal-storage options which used in posts.",
        "operationId": "Assets_GetInternalStorages",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assetsGetInternalStoragesResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get available internal-storage options in Divar mobile/tablet/laptop categories",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/open-platform/assets/oauth-scope": {
      "get": {
        "description": "These are available scopes for KenarDivar OAuth2.0.\nUse scopes in OAuth flow to request access to user data or perform actions on their behalf.",
        "operationId": "Assets_GetOAuthScopes",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assetsGetOAuthScopesResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get KenarDivar OAuth scopes",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/open-platform/assets/permission": {
      "get": {
        "description": "These permission are used to control access in KenarDivar Apps. Don't mistake them with OAuth scopes.\nIt's expected that apps be blind about these permissions.These are created for internal usages only, but feel free to request to be enabled for you app as needed.",
        "operationId": "Assets_GetPermissions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assetsGetPermissionsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get KenarDivar permissions",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/open-platform/assets/ram-memory": {
      "get": {
        "description": "Get all available ram-memory options in Divar mobile/tablet/laptop categories.This provides persian translations for each ram-memory options which used in posts.",
        "operationId": "Assets_GetRamMemories",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assetsGetRamMemoriesResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get available ram-memory options in Divar mobile/tablet/laptop categories",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/open-platform/assets/service-type": {
      "get": {
        "description": "These service types is used to group similar services in KenarDivar.\nAny new idea with new service types are welcome. Feel free to request them as needed.",
        "operationId": "Assets_GetServiceTypes",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/assetsGetServiceTypesResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get available service types in KenarDivar",
        "tags": [
          "Assets"
        ]
      }
    },
    "/v1/open-platform/chat/conversations/{conversation_id}": {
      "get": {
        "description": "This API is used to get the conversation and messages of a conversation by it's ID.This API expects access token with `CHAT_CONVERSATION_READ` scope.",
        "operationId": "ChatAPI_GetConversation",
        "parameters": [
          {
            "description": "Unique identifier for the conversation",
            "in": "path",
            "name": "conversation_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatapiGetConversationResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get Conversation by it's ID",
        "tags": [
          "ChatAPI"
        ]
      }
    },
    "/v1/open-platform/events/subscriptions": {
      "post": {
        "description": "This requests allows you to subscribe to an event.\nYou need to send access-token in this API to check your access.\nFor subscribing on `NEW_MESSAGE_ON_POST` you need one of these scopes:\n- CHAT_POST_CONVERSATIONS_READ.{post_token}\n- CHAT_SUPPLIER_ALL_CONVERSATIONS_READ\nFor subscribing on `POST_UPDATE` you need `USER_POSTS_GET` scope.\nAfter calling this API, You'll be notified in your webhook when corresponding event occurs.\nMake sure webhook URL is set on providers panel for your app.\nSome events are enabled by default and no subscription is needed for them(e.g chatbot messages).",
        "operationId": "Events_RegisterEventSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/eventsRegisterEventSubscriptionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventsRegisterEventSubscriptionResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Subscribe to an event",
        "tags": [
          "Events"
        ]
      }
    },
    "/v1/open-platform/finder/post/{token}": {
      "get": {
        "description": "This API allows you to get details about Divar post by its token.\nYou can use the token to get the post data and its state ",
        "operationId": "Finder_GetPost",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/finderGetPostResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get a Divar post",
        "tags": [
          "Finder"
        ]
      }
    },
    "/v1/open-platform/finder/user-posts": {
      "get": {
        "description": "This API allows you to get all posts of a user.\nYou can use this API to show user posts in your service.",
        "operationId": "Finder_GetUserPosts",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/finderGetUserPostsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get user posts",
        "tags": [
          "Finder"
        ]
      }
    },
    "/v1/open-platform/payment-ticket/validate": {
      "post": {
        "description": "Payment tickets are designed to integrate Kenar apps with Divar internal teams.\nUsing this API you can validate a payment ticket and get the issuer payload.",
        "operationId": "PaymentTicket_Validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/payment_ticketValidateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment_ticketValidateResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Validate a payment ticket",
        "tags": [
          "PaymentTicket"
        ]
      }
    },
    "/v1/open-platform/post/image-upload-url": {
      "get": {
        "description": "This API allows you to get an upload URL for uploading images of a post.\nYou can upload images to the returned URL using a POST request with binary encoding.",
        "operationId": "Post_GetImageUploadURL",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postGetImageUploadURLResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get image upload URL",
        "tags": [
          "Post"
        ]
      }
    },
    "/v1/open-platform/post/{post_token}": {
      "put": {
        "description": "This API allows you to edit a post. This needs `POST_EDIT.{post_token}` OAuth scope.\nBy now you can only edit title, description, and images of a post.",
        "operationId": "Post_EditPost",
        "parameters": [
          {
            "in": "path",
            "name": "post_token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostEditPostBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/postEditPostResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Edit a post",
        "tags": [
          "Post"
        ]
      }
    },
    "/v1/open-platform/post/{post_token}/pricing": {
      "get": {
        "description": "Using this API and with user permission, you can get the price of various services like Reorder.The price of this API is not necessarily the same as the price on Divar, and pricing may vary.Use this API to get the price before applying services (such as reordering a post).",
        "operationId": "Payment_GetPostPricing",
        "parameters": [
          {
            "description": "An 8-9 character unique identifier for the post",
            "in": "path",
            "name": "post_token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/paymentGetPostPricingResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Retrieve the cost of the service",
        "tags": [
          "limited"
        ]
      }
    },
    "/v1/open-platform/semantic/user/{phone}": {
      "delete": {
        "description": "You can delete the semantic information of a user by calling this API.",
        "operationId": "Semantic_DeleteUserSemantic",
        "parameters": [
          {
            "in": "path",
            "name": "phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "divar_user_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/semanticDeleteUserSemanticResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Delete User Semantic",
        "tags": [
          "Semantic"
        ]
      },
      "post": {
        "description": "In some cases, it is necessary to store information about the user in Divar without adding an addon.\nThe username in Divar is the same as the mobile number.\nThis API expects access token having `USER_VERIFICATION_CREATE` scope.\nUse the User Semantic APIs for this purpose.This service allows sending semantic information and an optional payment ticket.",
        "operationId": "Semantic_CreateUserSemantic",
        "parameters": [
          {
            "in": "path",
            "name": "phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/SemanticCreateUserSemanticBody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/semanticCreateUserSemanticResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Create User Semantic",
        "tags": [
          "Semantic"
        ]
      }
    },
    "/v1/open-platform/semantic/users/{divar_user_id}": {
      "delete": {
        "description": "You can delete the semantic information of a user by calling this API.",
        "operationId": "Semantic_DeleteUserSemantic2",
        "parameters": [
          {
            "in": "path",
            "name": "divar_user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "phone",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/semanticDeleteUserSemanticResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Delete User Semantic",
        "tags": [
          "Semantic"
        ]
      },
      "post": {
        "description": "In some cases, it is necessary to store information about the user in Divar without adding an addon.\nThe username in Divar is the same as the mobile number.\nThis API expects access token having `USER_VERIFICATION_CREATE` scope.\nUse the User Semantic APIs for this purpose.This service allows sending semantic information and an optional payment ticket.",
        "operationId": "Semantic_CreateUserSemantic2",
        "parameters": [
          {
            "in": "path",
            "name": "divar_user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/SemanticCreateUserSemanticBody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/semanticCreateUserSemanticResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Create User Semantic",
        "tags": [
          "Semantic"
        ]
      }
    },
    "/v1/open-platform/users": {
      "get": {
        "description": "After gaining an access token, you can use this API to get user information.\nWith scope `USER_PHONE` you can get user phone number.\nWith scope `USER_ID` you can get user id and you can rely on uniqueness of this id.\n",
        "operationId": "Finder_GetUser2",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/finderUser"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get user information",
        "tags": [
          "Finder"
        ]
      },
      "post": {
        "description": "After gaining an access token, you can use this API to get user information.\nWith scope `USER_PHONE` you can get user phone number.\nWith scope `USER_ID` you can get user id and you can rely on uniqueness of this id.\n",
        "operationId": "Finder_GetUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/finderGetUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/finderUser"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Get user information",
        "tags": [
          "Finder"
        ]
      }
    },
    "/v2/open-platform/addons/post/{token}": {
      "post": {
        "description": "Using this API and with user permission, you can attach a new AD to a post.\nYou can use available widgets to design your Addon.\nThis API need access token having one of the following scopes:\n- USER_POSTS_ADDON_CREATE\n- POST_ADDON_CREATE.{post_token}",
        "operationId": "Addons_CreatePostAddonV2",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddonsCreatePostAddonV2Body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addonsCreatePostAddonResponseV2"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Attach a new Addon to a post",
        "tags": [
          "Addons"
        ]
      }
    },
    "/v2/open-platform/addons/user/{phone}": {
      "post": {
        "description": "Using this API and with user permission, you can create a UserAddon.\nUserAddon will attach to all user posts in future and also back fills last 30 posts in the past.\nYou can use available widgets to design your UserAddon.\nThis API need access token having `USER_ADDON_CREATE` scope",
        "operationId": "Addons_CreateUserAddonV2",
        "parameters": [
          {
            "in": "path",
            "name": "phone",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AddonsCreateUserAddonV2Body"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addonsCreateUserAddonResponseV2"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Attach a new Addon to a user",
        "tags": [
          "Addons"
        ]
      }
    },
    "/v2/open-platform/addons/users/{divar_user_id}": {
      "get": {
        "description": "Retrieve all UserAddons of a user.",
        "operationId": "Addons_GetUserAddons2",
        "parameters": [
          {
            "in": "path",
            "name": "divar_user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "phone",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addonsGetUserAddonsResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Retrieve all UserAddons",
        "tags": [
          "Addons"
        ]
      },
      "post": {
        "description": "Using this API and with user permission, you can create a UserAddon.\nUserAddon will attach to all user posts in future and also back fills last 30 posts in the past.\nYou can use available widgets to design your UserAddon.\nThis API need access token having `USER_ADDON_CREATE` scope",
        "operationId": "Addons_CreateUserAddonV22",
        "parameters": [
          {
            "in": "path",
            "name": "divar_user_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AddonsCreateUserAddonV2Body"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addonsCreateUserAddonResponseV2"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Attach a new Addon to a user",
        "tags": [
          "Addons"
        ]
      }
    },
    "/v2/open-platform/conversations/{conversation_id}/messages": {
      "post": {
        "description": "This API is used to send a message to a conversation.\nYou need one of the following scopes to call this API:\n- CONVERSATION_SEND_MESSAGE.{conversation_id}\n- CHAT_SUPPLIER_ALL_CONVERSATIONS_MESSAGE_SEND\n- CHAT_POST_CONVERSATIONS_MESSAGE_SEND.{post_token}\n",
        "operationId": "ChatAPI_ConversationSendMessage",
        "parameters": [
          {
            "description": "Unique identifier for the conversation",
            "in": "path",
            "name": "conversation_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatAPIConversationSendMessageBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chatapiConversationSendMessageResponse"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Send a message to a conversation",
        "tags": [
          "ChatAPI"
        ]
      }
    },
    "/v2/open-platform/finder/post": {
      "post": {
        "description": "This API allows you to search Divar posts with some filters.\nYou can search posts by category, city, district, and some other filters.\nPosts will be sorted by their timestamp.\n",
        "operationId": "Finder_SearchPostV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/finderSearchPostsV2Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/finderSearchPostV2Response"
                }
              }
            },
            "description": "A successful response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/googlerpcStatus"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "summary": "Search Divar posts with some filters",
        "tags": [
          "Finder"
        ]
      }
    }
  },
  "security": [
    {
      "APIKey": []
    }
  ],
  "servers": [
    {
      "url": "https://open-api.divar.ir"
    }
  ],
  "tags": [
    {
      "name": "ChatAPI"
    },
    {
      "name": "Events"
    },
    {
      "name": "Finder"
    },
    {
      "name": "Assets"
    },
    {
      "name": "PaymentTicket"
    },
    {
      "name": "Post"
    },
    {
      "name": "Semantic"
    },
    {
      "name": "Addons"
    },
    {
      "description": "Limited APIs, Create tickets if you need to use them.",
      "name": "limited"
    }
  ]
}